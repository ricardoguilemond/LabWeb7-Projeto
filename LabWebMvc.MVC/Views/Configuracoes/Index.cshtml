@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, MyAssembly
@using static BLL.UtilBLL
@using LabWebMvc.MVC.ViewModel
@model vmConfiguracoes
@{
    Layout = "_Layout";
}
<script>
    $(document).ready(function () {
        $('#clickSubmit').click(function (event) {
            event.preventDefault();
            $.ajax({
                type: "POST",
                async: true,
                dataType: "json",
                data: $('#form').serialize(),
                success: function (data) {
                    //console.log("data: ", data);
                    var titulo = data['titulo'];
                    var mensagem = data['mensagem'];
                    var actionPos = data['action'];
                    var sucesso = data['sucesso'];
                    titulo = (titulo == null) ? 'Atenção' : data['titulo'];
                    var tipo = 'falha';
                    if (sucesso == true) tipo = 'sucesso';
                    //success: Javascript ::: aqui acontece todas as mensagens de sucesso e não sucesso
                    clickAviso(titulo, mensagem, tipo, actionPos);  //mensagem normal com desvio para outra action (site.js)
                },
                error: function (request, status, error) {
                    //aqui somente acontece no caso de exception/erro do javascript
                    clickAviso('Interrompido', 'Falha na execução', 'critica', actionPos);  //mensagem crítica e com desvio para outra action (site.js)
                }
            });
        })
    });
</script>
@using (Html.BeginForm(FormMethod.Post, new { @class = "form-horizontal", @id = "form", @enctype = "multipart/form-data" }))  //@id-"form" é obrigatório para campos chegarem do doutro lado
{
    <div class="row">
        <div class="col-md-4">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group mb-3">
                <div class="row align-items-center">
                    <div class="col-md-9">
                        @Html.Label("*Nome da Impressora de Cupom (1)")
                        @Html.TextBoxFor(p => p.ImpressoraCupom1, new {
                        @class = "form-control capitalize",
                                        @placeholder = "Exemplo: NaoFiscal, Cupom, Termica",
                                        @required = "required"
                                        })
                </div>
                <div class="col-md-3">
                    @Html.Label("Usar?")
                    @Html.DropDownListFor(p => p.UsarImpressoraCupom1,
                                        new SelectList(new[] {
                                        new { Value = 1, Text = "Sim" },
                                        new { Value = 0, Text = "Não" }
                                        }, "Value", "Text", Model.UsarImpressoraCupom1),
                                        new { @class = "form-select form-select-sm w-auto" }) <!-- w-auto = largura mínima -->
                </div>
            </div>
        </div>
        <div class="form-group mb-3">
            <div class="row align-items-center">
                <div class="col-md-9">
                    @Html.Label("*Nome da Impressora de Cupom (2)")
                    @Html.TextBoxFor(p => p.ImpressoraCupom2, new {
                                        @class = "form-control capitalize",
                                        @placeholder = "Exemplo: NaoFiscal, Cupom, Termica",
                                        @required = "required"
                                        })
                </div>
                <div class="col-md-3">
                    @Html.Label("Usar?")
                    @Html.DropDownListFor(p => p.UsarImpressoraCupom2,
                                        new SelectList(new[] {
                                        new { Value = 1, Text = "Sim" },
                                        new { Value = 0, Text = "Não" }
                                        }, "Value", "Text", Model.UsarImpressoraCupom2),
                                        new { @class = "form-select form-select-sm w-auto" }) <!-- w-auto = largura mínima -->
                </div>
            </div>
        </div>
        <div class="form-group mb-3">
            <div class="row align-items-center">
                <div class="col-md-9">
                    @Html.Label("*Nome da Impressora de Cupom (3)")
                    @Html.TextBoxFor(p => p.ImpressoraCupom3, new {
                                        @class = "form-control capitalize",
                                        @placeholder = "Exemplo: NaoFiscal, Cupom, Termica",
                                        @required = "required"
                                        })
                </div>
                <div class="col-md-3">
                    @Html.Label("Usar?")
                    @Html.DropDownListFor(p => p.UsarImpressoraCupom3,
                                        new SelectList(new[] {
                                        new { Value = 1, Text = "Sim" },
                                        new { Value = 0, Text = "Não" }
                                        }, "Value", "Text", Model.UsarImpressoraCupom3),
                                        new { @class = "form-select form-select-sm w-auto" }) <!-- w-auto = largura mínima -->
                </div>
            </div>
        </div>
        <div class="form-group mb-3">
            <div class="row">
                <div class="col-md-6">
                    @Html.Label("Fonte (Nome)")
                    @Html.TextBoxFor(p => p.FonteNome, new {
                                        @class = "form-control",
                                        @placeholder = "Exemplo: Courier New, Consolas"
                                        })
                </div>
                <div class="col-md-6">
                    @Html.Label("Fonte (Tamanho)")
                    @Html.TextBoxFor(p => p.FonteTamanho, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @min = "6",
                                        @max = "20",
                                        @placeholder = "Exemplo: 9, 10"
                                        })
                </div>
            </div>
        </div>
        <!-- Dados de formatação do conteúdo -->
        <div class="form-group mb-3">
            <div class="row">
                <div class="col-md-6">
                    @Html.Label("Largura do Papel (centésimos de polegada) padrão: 283")
                    @Html.TextBoxFor(p => p.LarguraPapel, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @placeholder = "Exemplo: 283 ou 384"
                                        })
                </div>
                <div class="col-md-6">
                    @Html.Label("Altura do Papel (centésimos de polegada)")
                    @Html.TextBoxFor(p => p.AlturaPapel, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @placeholder = "Exemplo: 32767 (máximo suportado)"
                                        })
                </div>
            </div>
        </div>
        <div class="form-group mb-3">
            <label>Margens (centésimos de polegada)</label>
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("Esquerda")
                    @Html.TextBoxFor(p => p.MargemEsquerda, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @placeholder = "Ex: 5"
                                        })
                </div>
                <div class="col-md-3">
                    @Html.Label("Direita")
                    @Html.TextBoxFor(p => p.MargemDireita, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @placeholder = "Ex: 5"
                                        })
                </div>
                <div class="col-md-3">
                    @Html.Label("Superior")
                    @Html.TextBoxFor(p => p.MargemSuperior, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @placeholder = "Ex: 5"
                                        })
                </div>
                <div class="col-md-3">
                    @Html.Label("Inferior")
                    @Html.TextBoxFor(p => p.MargemInferior, new {
                                        @class = "form-control",
                                        @type = "number",
                                        @placeholder = "Ex: 5"
                                        })
                </div>
            </div>
        </div>
        <!--
        Submeter Formulário
        -->
        <div class="form-group botao-centralizado">
            <button id="clickSubmit" type="submit" class="btn btn-lg btn-success botao-verde">
                Salvar
            </button>
        </div>
    </div>
</div>
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
